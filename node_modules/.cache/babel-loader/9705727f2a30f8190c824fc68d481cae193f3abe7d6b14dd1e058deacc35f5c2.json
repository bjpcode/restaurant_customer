{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baij\\\\Desktop\\\\Work\\\\Business\\\\restuarant\\\\customer\\\\src\\\\contexts\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  // Session data\n  sessionId: null,\n  tableNumber: null,\n  isSessionActive: false,\n  // UI state\n  isMobile: false,\n  isOnline: navigator.onLine,\n  currentView: 'menu',\n  // menu, cart, orders, profile\n\n  // Modal states\n  showCart: false,\n  showItemModal: false,\n  selectedMenuItem: null,\n  // Toast notifications\n  notifications: [],\n  // App settings\n  theme: 'light',\n  language: 'en',\n  // Performance\n  isLoading: false,\n  lastActivity: Date.now()\n};\n\n// Action types\nconst actionTypes = {\n  // Session actions\n  SET_SESSION: 'SET_SESSION',\n  SET_TABLE_NUMBER: 'SET_TABLE_NUMBER',\n  CLEAR_SESSION: 'CLEAR_SESSION',\n  // UI actions\n  SET_CURRENT_VIEW: 'SET_CURRENT_VIEW',\n  SET_MOBILE: 'SET_MOBILE',\n  SET_ONLINE_STATUS: 'SET_ONLINE_STATUS',\n  // Modal actions\n  SHOW_CART: 'SHOW_CART',\n  HIDE_CART: 'HIDE_CART',\n  SHOW_ITEM_MODAL: 'SHOW_ITEM_MODAL',\n  HIDE_ITEM_MODAL: 'HIDE_ITEM_MODAL',\n  // Notification actions\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\n  CLEAR_NOTIFICATIONS: 'CLEAR_NOTIFICATIONS',\n  // Settings actions\n  SET_THEME: 'SET_THEME',\n  SET_LANGUAGE: 'SET_LANGUAGE',\n  // Performance actions\n  SET_LOADING: 'SET_LOADING',\n  UPDATE_ACTIVITY: 'UPDATE_ACTIVITY'\n};\n\n// Reducer\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SESSION:\n      return {\n        ...state,\n        sessionId: action.payload.sessionId,\n        tableNumber: action.payload.tableNumber,\n        isSessionActive: true\n      };\n    case actionTypes.SET_TABLE_NUMBER:\n      return {\n        ...state,\n        tableNumber: action.payload\n      };\n    case actionTypes.CLEAR_SESSION:\n      return {\n        ...state,\n        sessionId: null,\n        tableNumber: null,\n        isSessionActive: false,\n        currentView: 'menu'\n      };\n    case actionTypes.SET_CURRENT_VIEW:\n      return {\n        ...state,\n        currentView: action.payload,\n        lastActivity: Date.now()\n      };\n    case actionTypes.SET_MOBILE:\n      return {\n        ...state,\n        isMobile: action.payload\n      };\n    case actionTypes.SET_ONLINE_STATUS:\n      return {\n        ...state,\n        isOnline: action.payload\n      };\n    case actionTypes.SHOW_CART:\n      return {\n        ...state,\n        showCart: true\n      };\n    case actionTypes.HIDE_CART:\n      return {\n        ...state,\n        showCart: false\n      };\n    case actionTypes.SHOW_ITEM_MODAL:\n      return {\n        ...state,\n        showItemModal: true,\n        selectedMenuItem: action.payload\n      };\n    case actionTypes.HIDE_ITEM_MODAL:\n      return {\n        ...state,\n        showItemModal: false,\n        selectedMenuItem: null\n      };\n    case actionTypes.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, {\n          id: uuidv4(),\n          timestamp: Date.now(),\n          ...action.payload\n        }]\n      };\n    case actionTypes.REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n    case actionTypes.CLEAR_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: []\n      };\n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        theme: action.payload\n      };\n    case actionTypes.SET_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload\n      };\n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case actionTypes.UPDATE_ACTIVITY:\n      return {\n        ...state,\n        lastActivity: Date.now()\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AppContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Action creators\n  const actions = {\n    // Session actions\n    setSession: (sessionId, tableNumber) => {\n      dispatch({\n        type: actionTypes.SET_SESSION,\n        payload: {\n          sessionId,\n          tableNumber\n        }\n      });\n    },\n    setTableNumber: tableNumber => {\n      dispatch({\n        type: actionTypes.SET_TABLE_NUMBER,\n        payload: tableNumber\n      });\n    },\n    clearSession: () => {\n      dispatch({\n        type: actionTypes.CLEAR_SESSION\n      });\n    },\n    // UI actions\n    setCurrentView: view => {\n      dispatch({\n        type: actionTypes.SET_CURRENT_VIEW,\n        payload: view\n      });\n    },\n    setMobile: isMobile => {\n      dispatch({\n        type: actionTypes.SET_MOBILE,\n        payload: isMobile\n      });\n    },\n    setOnlineStatus: isOnline => {\n      dispatch({\n        type: actionTypes.SET_ONLINE_STATUS,\n        payload: isOnline\n      });\n    },\n    // Modal actions\n    showCart: () => {\n      dispatch({\n        type: actionTypes.SHOW_CART\n      });\n    },\n    hideCart: () => {\n      dispatch({\n        type: actionTypes.HIDE_CART\n      });\n    },\n    showItemModal: menuItem => {\n      dispatch({\n        type: actionTypes.SHOW_ITEM_MODAL,\n        payload: menuItem\n      });\n    },\n    hideItemModal: () => {\n      dispatch({\n        type: actionTypes.HIDE_ITEM_MODAL\n      });\n    },\n    // Notification actions\n    addNotification: notification => {\n      dispatch({\n        type: actionTypes.ADD_NOTIFICATION,\n        payload: notification\n      });\n    },\n    removeNotification: id => {\n      dispatch({\n        type: actionTypes.REMOVE_NOTIFICATION,\n        payload: id\n      });\n    },\n    clearNotifications: () => {\n      dispatch({\n        type: actionTypes.CLEAR_NOTIFICATIONS\n      });\n    },\n    // Settings actions\n    setTheme: theme => {\n      dispatch({\n        type: actionTypes.SET_THEME,\n        payload: theme\n      });\n    },\n    setLanguage: language => {\n      dispatch({\n        type: actionTypes.SET_LANGUAGE,\n        payload: language\n      });\n    },\n    // Performance actions\n    setLoading: isLoading => {\n      dispatch({\n        type: actionTypes.SET_LOADING,\n        payload: isLoading\n      });\n    },\n    updateActivity: () => {\n      dispatch({\n        type: actionTypes.UPDATE_ACTIVITY\n      });\n    }\n  };\n\n  // Auto-generate session ID on mount if not present\n  useEffect(() => {\n    if (!state.sessionId) {\n      const sessionId = uuidv4();\n\n      // Try to get table number from URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const tableFromUrl = urlParams.get('table');\n      if (tableFromUrl) {\n        actions.setSession(sessionId, parseInt(tableFromUrl, 10));\n      }\n    }\n  }, [state.sessionId]);\n\n  // Handle mobile detection\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobile = window.innerWidth <= 768 || /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n      actions.setMobile(isMobile);\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // Handle online/offline status\n  useEffect(() => {\n    const handleOnline = () => actions.setOnlineStatus(true);\n    const handleOffline = () => actions.setOnlineStatus(false);\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Auto-remove notifications after timeout\n  useEffect(() => {\n    const timeouts = state.notifications.map(notification => {\n      if (notification.autoRemove !== false) {\n        return setTimeout(() => {\n          actions.removeNotification(notification.id);\n        }, notification.duration || 5000);\n      }\n      return null;\n    }).filter(Boolean);\n    return () => {\n      timeouts.forEach(timeout => clearTimeout(timeout));\n    };\n  }, [state.notifications]);\n\n  // Persist session data to localStorage\n  useEffect(() => {\n    if (state.sessionId && state.tableNumber) {\n      localStorage.setItem('restaurant_session', JSON.stringify({\n        sessionId: state.sessionId,\n        tableNumber: state.tableNumber,\n        timestamp: Date.now()\n      }));\n    }\n  }, [state.sessionId, state.tableNumber]);\n\n  // Load session data from localStorage on mount\n  useEffect(() => {\n    try {\n      const savedSession = localStorage.getItem('restaurant_session');\n      if (savedSession) {\n        const {\n          sessionId,\n          tableNumber,\n          timestamp\n        } = JSON.parse(savedSession);\n\n        // Check if session is still valid (24 hours)\n        if (Date.now() - timestamp < 24 * 60 * 60 * 1000) {\n          actions.setSession(sessionId, tableNumber);\n        } else {\n          localStorage.removeItem('restaurant_session');\n        }\n      }\n    } catch (error) {\n      console.error('Error loading session from localStorage:', error);\n    }\n  }, []);\n  const value = {\n    ...state,\n    ...actions\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the app context\n_s(AppProvider, \"rsEvaSQyej/rH7CAN7ipFP1BWvU=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","v4","uuidv4","jsxDEV","_jsxDEV","initialState","sessionId","tableNumber","isSessionActive","isMobile","isOnline","navigator","onLine","currentView","showCart","showItemModal","selectedMenuItem","notifications","theme","language","isLoading","lastActivity","Date","now","actionTypes","SET_SESSION","SET_TABLE_NUMBER","CLEAR_SESSION","SET_CURRENT_VIEW","SET_MOBILE","SET_ONLINE_STATUS","SHOW_CART","HIDE_CART","SHOW_ITEM_MODAL","HIDE_ITEM_MODAL","ADD_NOTIFICATION","REMOVE_NOTIFICATION","CLEAR_NOTIFICATIONS","SET_THEME","SET_LANGUAGE","SET_LOADING","UPDATE_ACTIVITY","appReducer","state","action","type","payload","id","timestamp","filter","n","AppContext","AppProvider","children","_s","dispatch","actions","setSession","setTableNumber","clearSession","setCurrentView","view","setMobile","setOnlineStatus","hideCart","menuItem","hideItemModal","addNotification","notification","removeNotification","clearNotifications","setTheme","setLanguage","setLoading","updateActivity","urlParams","URLSearchParams","window","location","search","tableFromUrl","get","parseInt","checkMobile","innerWidth","test","userAgent","addEventListener","removeEventListener","handleOnline","handleOffline","timeouts","map","autoRemove","setTimeout","duration","Boolean","forEach","timeout","clearTimeout","localStorage","setItem","JSON","stringify","savedSession","getItem","parse","removeItem","error","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/baij/Desktop/Work/Business/restuarant/customer/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Initial state\nconst initialState = {\n  // Session data\n  sessionId: null,\n  tableNumber: null,\n  isSessionActive: false,\n\n  // UI state\n  isMobile: false,\n  isOnline: navigator.onLine,\n  currentView: 'menu', // menu, cart, orders, profile\n  \n  // Modal states\n  showCart: false,\n  showItemModal: false,\n  selectedMenuItem: null,\n  \n  // Toast notifications\n  notifications: [],\n  \n  // App settings\n  theme: 'light',\n  language: 'en',\n  \n  // Performance\n  isLoading: false,\n  lastActivity: Date.now()\n};\n\n// Action types\nconst actionTypes = {\n  // Session actions\n  SET_SESSION: 'SET_SESSION',\n  SET_TABLE_NUMBER: 'SET_TABLE_NUMBER',\n  CLEAR_SESSION: 'CLEAR_SESSION',\n  \n  // UI actions\n  SET_CURRENT_VIEW: 'SET_CURRENT_VIEW',\n  SET_MOBILE: 'SET_MOBILE',\n  SET_ONLINE_STATUS: 'SET_ONLINE_STATUS',\n  \n  // Modal actions\n  SHOW_CART: 'SHOW_CART',\n  HIDE_CART: 'HIDE_CART',\n  SHOW_ITEM_MODAL: 'SHOW_ITEM_MODAL',\n  HIDE_ITEM_MODAL: 'HIDE_ITEM_MODAL',\n  \n  // Notification actions\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\n  CLEAR_NOTIFICATIONS: 'CLEAR_NOTIFICATIONS',\n  \n  // Settings actions\n  SET_THEME: 'SET_THEME',\n  SET_LANGUAGE: 'SET_LANGUAGE',\n  \n  // Performance actions\n  SET_LOADING: 'SET_LOADING',\n  UPDATE_ACTIVITY: 'UPDATE_ACTIVITY'\n};\n\n// Reducer\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SESSION:\n      return {\n        ...state,\n        sessionId: action.payload.sessionId,\n        tableNumber: action.payload.tableNumber,\n        isSessionActive: true\n      };\n      \n    case actionTypes.SET_TABLE_NUMBER:\n      return {\n        ...state,\n        tableNumber: action.payload\n      };\n      \n    case actionTypes.CLEAR_SESSION:\n      return {\n        ...state,\n        sessionId: null,\n        tableNumber: null,\n        isSessionActive: false,\n        currentView: 'menu'\n      };\n      \n    case actionTypes.SET_CURRENT_VIEW:\n      return {\n        ...state,\n        currentView: action.payload,\n        lastActivity: Date.now()\n      };\n      \n    case actionTypes.SET_MOBILE:\n      return {\n        ...state,\n        isMobile: action.payload\n      };\n      \n    case actionTypes.SET_ONLINE_STATUS:\n      return {\n        ...state,\n        isOnline: action.payload\n      };\n      \n    case actionTypes.SHOW_CART:\n      return {\n        ...state,\n        showCart: true\n      };\n      \n    case actionTypes.HIDE_CART:\n      return {\n        ...state,\n        showCart: false\n      };\n      \n    case actionTypes.SHOW_ITEM_MODAL:\n      return {\n        ...state,\n        showItemModal: true,\n        selectedMenuItem: action.payload\n      };\n      \n    case actionTypes.HIDE_ITEM_MODAL:\n      return {\n        ...state,\n        showItemModal: false,\n        selectedMenuItem: null\n      };\n      \n    case actionTypes.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, {\n          id: uuidv4(),\n          timestamp: Date.now(),\n          ...action.payload\n        }]\n      };\n      \n    case actionTypes.REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n      \n    case actionTypes.CLEAR_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: []\n      };\n      \n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        theme: action.payload\n      };\n      \n    case actionTypes.SET_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload\n      };\n      \n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n      \n    case actionTypes.UPDATE_ACTIVITY:\n      return {\n        ...state,\n        lastActivity: Date.now()\n      };\n      \n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AppContext = createContext();\n\n// Provider component\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Action creators\n  const actions = {\n    // Session actions\n    setSession: (sessionId, tableNumber) => {\n      dispatch({\n        type: actionTypes.SET_SESSION,\n        payload: { sessionId, tableNumber }\n      });\n    },\n    \n    setTableNumber: (tableNumber) => {\n      dispatch({\n        type: actionTypes.SET_TABLE_NUMBER,\n        payload: tableNumber\n      });\n    },\n    \n    clearSession: () => {\n      dispatch({ type: actionTypes.CLEAR_SESSION });\n    },\n    \n    // UI actions\n    setCurrentView: (view) => {\n      dispatch({\n        type: actionTypes.SET_CURRENT_VIEW,\n        payload: view\n      });\n    },\n    \n    setMobile: (isMobile) => {\n      dispatch({\n        type: actionTypes.SET_MOBILE,\n        payload: isMobile\n      });\n    },\n    \n    setOnlineStatus: (isOnline) => {\n      dispatch({\n        type: actionTypes.SET_ONLINE_STATUS,\n        payload: isOnline\n      });\n    },\n    \n    // Modal actions\n    showCart: () => {\n      dispatch({ type: actionTypes.SHOW_CART });\n    },\n    \n    hideCart: () => {\n      dispatch({ type: actionTypes.HIDE_CART });\n    },\n    \n    showItemModal: (menuItem) => {\n      dispatch({\n        type: actionTypes.SHOW_ITEM_MODAL,\n        payload: menuItem\n      });\n    },\n    \n    hideItemModal: () => {\n      dispatch({ type: actionTypes.HIDE_ITEM_MODAL });\n    },\n    \n    // Notification actions\n    addNotification: (notification) => {\n      dispatch({\n        type: actionTypes.ADD_NOTIFICATION,\n        payload: notification\n      });\n    },\n    \n    removeNotification: (id) => {\n      dispatch({\n        type: actionTypes.REMOVE_NOTIFICATION,\n        payload: id\n      });\n    },\n    \n    clearNotifications: () => {\n      dispatch({ type: actionTypes.CLEAR_NOTIFICATIONS });\n    },\n    \n    // Settings actions\n    setTheme: (theme) => {\n      dispatch({\n        type: actionTypes.SET_THEME,\n        payload: theme\n      });\n    },\n    \n    setLanguage: (language) => {\n      dispatch({\n        type: actionTypes.SET_LANGUAGE,\n        payload: language\n      });\n    },\n    \n    // Performance actions\n    setLoading: (isLoading) => {\n      dispatch({\n        type: actionTypes.SET_LOADING,\n        payload: isLoading\n      });\n    },\n    \n    updateActivity: () => {\n      dispatch({ type: actionTypes.UPDATE_ACTIVITY });\n    }\n  };\n\n  // Auto-generate session ID on mount if not present\n  useEffect(() => {\n    if (!state.sessionId) {\n      const sessionId = uuidv4();\n      \n      // Try to get table number from URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const tableFromUrl = urlParams.get('table');\n      \n      if (tableFromUrl) {\n        actions.setSession(sessionId, parseInt(tableFromUrl, 10));\n      }\n    }\n  }, [state.sessionId]);\n\n  // Handle mobile detection\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobile = window.innerWidth <= 768 || \n                     /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n      actions.setMobile(isMobile);\n    };\n\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    \n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // Handle online/offline status\n  useEffect(() => {\n    const handleOnline = () => actions.setOnlineStatus(true);\n    const handleOffline = () => actions.setOnlineStatus(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Auto-remove notifications after timeout\n  useEffect(() => {\n    const timeouts = state.notifications.map(notification => {\n      if (notification.autoRemove !== false) {\n        return setTimeout(() => {\n          actions.removeNotification(notification.id);\n        }, notification.duration || 5000);\n      }\n      return null;\n    }).filter(Boolean);\n\n    return () => {\n      timeouts.forEach(timeout => clearTimeout(timeout));\n    };\n  }, [state.notifications]);\n\n  // Persist session data to localStorage\n  useEffect(() => {\n    if (state.sessionId && state.tableNumber) {\n      localStorage.setItem('restaurant_session', JSON.stringify({\n        sessionId: state.sessionId,\n        tableNumber: state.tableNumber,\n        timestamp: Date.now()\n      }));\n    }\n  }, [state.sessionId, state.tableNumber]);\n\n  // Load session data from localStorage on mount\n  useEffect(() => {\n    try {\n      const savedSession = localStorage.getItem('restaurant_session');\n      if (savedSession) {\n        const { sessionId, tableNumber, timestamp } = JSON.parse(savedSession);\n        \n        // Check if session is still valid (24 hours)\n        if (Date.now() - timestamp < 24 * 60 * 60 * 1000) {\n          actions.setSession(sessionId, tableNumber);\n        } else {\n          localStorage.removeItem('restaurant_session');\n        }\n      }\n    } catch (error) {\n      console.error('Error loading session from localStorage:', error);\n    }\n  }, []);\n\n  const value = {\n    ...state,\n    ...actions\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Custom hook to use the app context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within AppProvider');\n  }\n  return context;\n};\n\nexport default AppContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}