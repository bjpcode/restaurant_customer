{"ast":null,"code":"// Analytics and monitoring utilities\n\n// Performance monitoring\nexport const performanceMonitor = {\n  // Track Core Web Vitals\n  trackWebVitals() {\n    if (typeof window === 'undefined') return;\n\n    // Largest Contentful Paint (LCP)\n    new PerformanceObserver(entryList => {\n      const entries = entryList.getEntries();\n      const lastEntry = entries[entries.length - 1];\n      this.reportMetric('LCP', lastEntry.startTime);\n    }).observe({\n      entryTypes: ['largest-contentful-paint']\n    });\n\n    // First Input Delay (FID)\n    new PerformanceObserver(entryList => {\n      const entries = entryList.getEntries();\n      entries.forEach(entry => {\n        this.reportMetric('FID', entry.processingStart - entry.startTime);\n      });\n    }).observe({\n      entryTypes: ['first-input']\n    });\n\n    // Cumulative Layout Shift (CLS)\n    let clsValue = 0;\n    new PerformanceObserver(entryList => {\n      const entries = entryList.getEntries();\n      entries.forEach(entry => {\n        if (!entry.hadRecentInput) {\n          clsValue += entry.value;\n        }\n      });\n      this.reportMetric('CLS', clsValue);\n    }).observe({\n      entryTypes: ['layout-shift']\n    });\n  },\n  // Track custom metrics\n  reportMetric(name, value, labels = {}) {\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`Metric: ${name}`, value, labels);\n      return;\n    }\n\n    // Send to analytics service\n    this.sendToAnalytics('performance_metric', {\n      metric_name: name,\n      metric_value: value,\n      timestamp: Date.now(),\n      ...labels\n    });\n  },\n  // Measure function execution time\n  measure(name, fn) {\n    return async (...args) => {\n      const start = performance.now();\n      const result = await fn(...args);\n      const duration = performance.now() - start;\n      this.reportMetric('function_duration', duration, {\n        function_name: name\n      });\n      return result;\n    };\n  },\n  // Track resource loading times\n  trackResourceTiming() {\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (entry.initiatorType) {\n          this.reportMetric('resource_load_time', entry.duration, {\n            resource_type: entry.initiatorType,\n            resource_name: entry.name\n          });\n        }\n      });\n    });\n    observer.observe({\n      entryTypes: ['resource']\n    });\n  },\n  sendToAnalytics(event, data) {\n    // Integration with analytics services\n    if (window.gtag) {\n      window.gtag('event', event, data);\n    }\n\n    // Send to custom analytics endpoint\n    fetch('/api/analytics', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        event,\n        data,\n        timestamp: Date.now()\n      })\n    }).catch(console.error);\n  }\n};\n\n// User behavior tracking\nexport const userTracker = {\n  // Track page views\n  trackPageView(path, title) {\n    this.track('page_view', {\n      page_path: path,\n      page_title: title,\n      timestamp: Date.now()\n    });\n  },\n  // Track user interactions\n  trackInteraction(action, element, details = {}) {\n    this.track('user_interaction', {\n      action,\n      element,\n      timestamp: Date.now(),\n      ...details\n    });\n  },\n  // Track cart events\n  trackCartEvent(action, item, quantity = 1) {\n    this.track('cart_event', {\n      action,\n      // add, remove, update, clear\n      item_id: item.id,\n      item_name: item.name,\n      item_price: item.price,\n      quantity,\n      timestamp: Date.now()\n    });\n  },\n  // Track order events\n  trackOrderEvent(action, order) {\n    var _order$order_items;\n    this.track('order_event', {\n      action,\n      // start, submit, complete, cancel\n      order_id: order.id,\n      order_total: order.total_amount,\n      item_count: ((_order$order_items = order.order_items) === null || _order$order_items === void 0 ? void 0 : _order$order_items.length) || 0,\n      table_number: order.table_number,\n      timestamp: Date.now()\n    });\n  },\n  // Track search behavior\n  trackSearch(query, results_count, filters = {}) {\n    this.track('search', {\n      search_query: query,\n      results_count,\n      filters,\n      timestamp: Date.now()\n    });\n  },\n  // Track errors\n  trackError(error, context = {}) {\n    this.track('error', {\n      error_message: error.message,\n      error_stack: error.stack,\n      error_type: error.name,\n      context,\n      timestamp: Date.now(),\n      user_agent: navigator.userAgent,\n      url: window.location.href\n    });\n  },\n  // Generic tracking function\n  track(event, data) {\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`Analytics: ${event}`, data);\n      return;\n    }\n\n    // Add session information\n    const sessionData = {\n      session_id: this.getSessionId(),\n      user_id: this.getUserId(),\n      device_type: this.getDeviceType(),\n      ...data\n    };\n    performanceMonitor.sendToAnalytics(event, sessionData);\n  },\n  // Helper methods\n  getSessionId() {\n    let sessionId = sessionStorage.getItem('analytics_session_id');\n    if (!sessionId) {\n      sessionId = `session_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`;\n      sessionStorage.setItem('analytics_session_id', sessionId);\n    }\n    return sessionId;\n  },\n  getUserId() {\n    let userId = localStorage.getItem('analytics_user_id');\n    if (!userId) {\n      userId = `user_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`;\n      localStorage.setItem('analytics_user_id', userId);\n    }\n    return userId;\n  },\n  getDeviceType() {\n    const width = window.innerWidth;\n    if (width < 768) return 'mobile';\n    if (width < 1024) return 'tablet';\n    return 'desktop';\n  }\n};\n\n// Error tracking and reporting\nexport const errorTracker = {\n  init() {\n    // Capture global errors\n    window.addEventListener('error', event => {\n      this.reportError(event.error, {\n        type: 'javascript_error',\n        filename: event.filename,\n        lineno: event.lineno,\n        colno: event.colno\n      });\n    });\n\n    // Capture unhandled promise rejections\n    window.addEventListener('unhandledrejection', event => {\n      this.reportError(new Error(event.reason), {\n        type: 'unhandled_promise_rejection'\n      });\n    });\n\n    // Capture React errors (to be used with error boundaries)\n    this.captureReactErrors();\n  },\n  reportError(error, context = {}) {\n    const errorInfo = {\n      message: error.message,\n      stack: error.stack,\n      name: error.name,\n      timestamp: Date.now(),\n      url: window.location.href,\n      user_agent: navigator.userAgent,\n      context\n    };\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('Error tracked:', errorInfo);\n    }\n\n    // Send to error tracking service\n    this.sendErrorToService(errorInfo);\n\n    // Track in analytics\n    userTracker.trackError(error, context);\n  },\n  sendErrorToService(errorInfo) {\n    // Send to error tracking service (e.g., Sentry, LogRocket)\n    fetch('/api/errors', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(errorInfo)\n    }).catch(() => {\n      // Fallback: store in localStorage for later sync\n      const errors = JSON.parse(localStorage.getItem('pending_errors') || '[]');\n      errors.push(errorInfo);\n      localStorage.setItem('pending_errors', JSON.stringify(errors.slice(-10))); // Keep last 10\n    });\n  },\n  captureReactErrors() {\n    // This would be integrated with error boundaries\n    window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ = {\n      onError: (error, errorInfo) => {\n        this.reportError(error, {\n          type: 'react_error',\n          component_stack: errorInfo.componentStack\n        });\n      }\n    };\n  }\n};\n\n// A/B testing framework\nexport const abTesting = {\n  experiments: new Map(),\n  // Define an experiment\n  defineExperiment(experimentId, variations, defaultVariation = 'control') {\n    this.experiments.set(experimentId, {\n      variations,\n      defaultVariation,\n      userVariation: this.getUserVariation(experimentId, variations, defaultVariation)\n    });\n  },\n  // Get user's variation for an experiment\n  getVariation(experimentId) {\n    const experiment = this.experiments.get(experimentId);\n    return experiment ? experiment.userVariation : null;\n  },\n  // Track experiment exposure\n  trackExposure(experimentId) {\n    const variation = this.getVariation(experimentId);\n    if (variation) {\n      userTracker.track('experiment_exposure', {\n        experiment_id: experimentId,\n        variation\n      });\n    }\n  },\n  // Track experiment conversion\n  trackConversion(experimentId, conversionEvent, value = 1) {\n    const variation = this.getVariation(experimentId);\n    if (variation) {\n      userTracker.track('experiment_conversion', {\n        experiment_id: experimentId,\n        variation,\n        conversion_event: conversionEvent,\n        value\n      });\n    }\n  },\n  getUserVariation(experimentId, variations, defaultVariation) {\n    // Consistent user bucketing based on user ID\n    const userId = userTracker.getUserId();\n    const hash = this.hashString(userId + experimentId);\n    const bucket = hash % 100;\n\n    // Simple even distribution for now\n    const variationIndex = Math.floor(bucket / (100 / variations.length));\n    return variations[variationIndex] || defaultVariation;\n  },\n  hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash);\n  }\n};\n\n// Initialize analytics\nexport const initAnalytics = () => {\n  // Initialize performance monitoring\n  performanceMonitor.trackWebVitals();\n  performanceMonitor.trackResourceTiming();\n\n  // Initialize error tracking\n  errorTracker.init();\n\n  // Track initial page view\n  if (typeof window !== 'undefined') {\n    userTracker.trackPageView(window.location.pathname, document.title);\n  }\n\n  // Set up route change tracking for SPAs\n  if (typeof window !== 'undefined' && window.history) {\n    const originalPushState = window.history.pushState;\n    window.history.pushState = function (...args) {\n      originalPushState.apply(window.history, args);\n      userTracker.trackPageView(window.location.pathname, document.title);\n    };\n  }\n  console.log('Analytics initialized');\n};\n\n// Export default analytics object\nexport default {\n  performance: performanceMonitor,\n  user: userTracker,\n  error: errorTracker,\n  ab: abTesting,\n  init: initAnalytics\n};","map":{"version":3,"names":["performanceMonitor","trackWebVitals","window","PerformanceObserver","entryList","entries","getEntries","lastEntry","length","reportMetric","startTime","observe","entryTypes","forEach","entry","processingStart","clsValue","hadRecentInput","value","name","labels","process","env","NODE_ENV","console","log","sendToAnalytics","metric_name","metric_value","timestamp","Date","now","measure","fn","args","start","performance","result","duration","function_name","trackResourceTiming","observer","list","initiatorType","resource_type","resource_name","event","data","gtag","fetch","method","headers","body","JSON","stringify","catch","error","userTracker","trackPageView","path","title","track","page_path","page_title","trackInteraction","action","element","details","trackCartEvent","item","quantity","item_id","id","item_name","item_price","price","trackOrderEvent","order","_order$order_items","order_id","order_total","total_amount","item_count","order_items","table_number","trackSearch","query","results_count","filters","search_query","trackError","context","error_message","message","error_stack","stack","error_type","user_agent","navigator","userAgent","url","location","href","sessionData","session_id","getSessionId","user_id","getUserId","device_type","getDeviceType","sessionId","sessionStorage","getItem","Math","random","toString","substring","setItem","userId","localStorage","width","innerWidth","errorTracker","init","addEventListener","reportError","type","filename","lineno","colno","Error","reason","captureReactErrors","errorInfo","sendErrorToService","errors","parse","push","slice","__REACT_ERROR_OVERLAY_GLOBAL_HOOK__","onError","component_stack","componentStack","abTesting","experiments","Map","defineExperiment","experimentId","variations","defaultVariation","set","userVariation","getUserVariation","getVariation","experiment","get","trackExposure","variation","experiment_id","trackConversion","conversionEvent","conversion_event","hash","hashString","bucket","variationIndex","floor","str","i","char","charCodeAt","abs","initAnalytics","pathname","document","history","originalPushState","pushState","apply","user","ab"],"sources":["C:/Users/baij/Desktop/Work/Business/restuarant/customer/src/utils/analytics.js"],"sourcesContent":["// Analytics and monitoring utilities\n\n// Performance monitoring\nexport const performanceMonitor = {\n  // Track Core Web Vitals\n  trackWebVitals() {\n    if (typeof window === 'undefined') return;\n    \n    // Largest Contentful Paint (LCP)\n    new PerformanceObserver((entryList) => {\n      const entries = entryList.getEntries();\n      const lastEntry = entries[entries.length - 1];\n      \n      this.reportMetric('LCP', lastEntry.startTime);\n    }).observe({ entryTypes: ['largest-contentful-paint'] });\n    \n    // First Input Delay (FID)\n    new PerformanceObserver((entryList) => {\n      const entries = entryList.getEntries();\n      entries.forEach((entry) => {\n        this.reportMetric('FID', entry.processingStart - entry.startTime);\n      });\n    }).observe({ entryTypes: ['first-input'] });\n    \n    // Cumulative Layout Shift (CLS)\n    let clsValue = 0;\n    new PerformanceObserver((entryList) => {\n      const entries = entryList.getEntries();\n      entries.forEach((entry) => {\n        if (!entry.hadRecentInput) {\n          clsValue += entry.value;\n        }\n      });\n      this.reportMetric('CLS', clsValue);\n    }).observe({ entryTypes: ['layout-shift'] });\n  },\n  \n  // Track custom metrics\n  reportMetric(name, value, labels = {}) {\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`Metric: ${name}`, value, labels);\n      return;\n    }\n    \n    // Send to analytics service\n    this.sendToAnalytics('performance_metric', {\n      metric_name: name,\n      metric_value: value,\n      timestamp: Date.now(),\n      ...labels\n    });\n  },\n  \n  // Measure function execution time\n  measure(name, fn) {\n    return async (...args) => {\n      const start = performance.now();\n      const result = await fn(...args);\n      const duration = performance.now() - start;\n      \n      this.reportMetric('function_duration', duration, { function_name: name });\n      return result;\n    };\n  },\n  \n  // Track resource loading times\n  trackResourceTiming() {\n    const observer = new PerformanceObserver((list) => {\n      list.getEntries().forEach((entry) => {\n        if (entry.initiatorType) {\n          this.reportMetric('resource_load_time', entry.duration, {\n            resource_type: entry.initiatorType,\n            resource_name: entry.name\n          });\n        }\n      });\n    });\n    \n    observer.observe({ entryTypes: ['resource'] });\n  },\n  \n  sendToAnalytics(event, data) {\n    // Integration with analytics services\n    if (window.gtag) {\n      window.gtag('event', event, data);\n    }\n    \n    // Send to custom analytics endpoint\n    fetch('/api/analytics', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ event, data, timestamp: Date.now() })\n    }).catch(console.error);\n  }\n};\n\n// User behavior tracking\nexport const userTracker = {\n  // Track page views\n  trackPageView(path, title) {\n    this.track('page_view', {\n      page_path: path,\n      page_title: title,\n      timestamp: Date.now()\n    });\n  },\n  \n  // Track user interactions\n  trackInteraction(action, element, details = {}) {\n    this.track('user_interaction', {\n      action,\n      element,\n      timestamp: Date.now(),\n      ...details\n    });\n  },\n  \n  // Track cart events\n  trackCartEvent(action, item, quantity = 1) {\n    this.track('cart_event', {\n      action, // add, remove, update, clear\n      item_id: item.id,\n      item_name: item.name,\n      item_price: item.price,\n      quantity,\n      timestamp: Date.now()\n    });\n  },\n  \n  // Track order events\n  trackOrderEvent(action, order) {\n    this.track('order_event', {\n      action, // start, submit, complete, cancel\n      order_id: order.id,\n      order_total: order.total_amount,\n      item_count: order.order_items?.length || 0,\n      table_number: order.table_number,\n      timestamp: Date.now()\n    });\n  },\n  \n  // Track search behavior\n  trackSearch(query, results_count, filters = {}) {\n    this.track('search', {\n      search_query: query,\n      results_count,\n      filters,\n      timestamp: Date.now()\n    });\n  },\n  \n  // Track errors\n  trackError(error, context = {}) {\n    this.track('error', {\n      error_message: error.message,\n      error_stack: error.stack,\n      error_type: error.name,\n      context,\n      timestamp: Date.now(),\n      user_agent: navigator.userAgent,\n      url: window.location.href\n    });\n  },\n  \n  // Generic tracking function\n  track(event, data) {\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`Analytics: ${event}`, data);\n      return;\n    }\n    \n    // Add session information\n    const sessionData = {\n      session_id: this.getSessionId(),\n      user_id: this.getUserId(),\n      device_type: this.getDeviceType(),\n      ...data\n    };\n    \n    performanceMonitor.sendToAnalytics(event, sessionData);\n  },\n  \n  // Helper methods\n  getSessionId() {\n    let sessionId = sessionStorage.getItem('analytics_session_id');\n    if (!sessionId) {\n      sessionId = `session_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`;\n      sessionStorage.setItem('analytics_session_id', sessionId);\n    }\n    return sessionId;\n  },\n  \n  getUserId() {\n    let userId = localStorage.getItem('analytics_user_id');\n    if (!userId) {\n      userId = `user_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`;\n      localStorage.setItem('analytics_user_id', userId);\n    }\n    return userId;\n  },\n  \n  getDeviceType() {\n    const width = window.innerWidth;\n    if (width < 768) return 'mobile';\n    if (width < 1024) return 'tablet';\n    return 'desktop';\n  }\n};\n\n// Error tracking and reporting\nexport const errorTracker = {\n  init() {\n    // Capture global errors\n    window.addEventListener('error', (event) => {\n      this.reportError(event.error, {\n        type: 'javascript_error',\n        filename: event.filename,\n        lineno: event.lineno,\n        colno: event.colno\n      });\n    });\n    \n    // Capture unhandled promise rejections\n    window.addEventListener('unhandledrejection', (event) => {\n      this.reportError(new Error(event.reason), {\n        type: 'unhandled_promise_rejection'\n      });\n    });\n    \n    // Capture React errors (to be used with error boundaries)\n    this.captureReactErrors();\n  },\n  \n  reportError(error, context = {}) {\n    const errorInfo = {\n      message: error.message,\n      stack: error.stack,\n      name: error.name,\n      timestamp: Date.now(),\n      url: window.location.href,\n      user_agent: navigator.userAgent,\n      context\n    };\n    \n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('Error tracked:', errorInfo);\n    }\n    \n    // Send to error tracking service\n    this.sendErrorToService(errorInfo);\n    \n    // Track in analytics\n    userTracker.trackError(error, context);\n  },\n  \n  sendErrorToService(errorInfo) {\n    // Send to error tracking service (e.g., Sentry, LogRocket)\n    fetch('/api/errors', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(errorInfo)\n    }).catch(() => {\n      // Fallback: store in localStorage for later sync\n      const errors = JSON.parse(localStorage.getItem('pending_errors') || '[]');\n      errors.push(errorInfo);\n      localStorage.setItem('pending_errors', JSON.stringify(errors.slice(-10))); // Keep last 10\n    });\n  },\n  \n  captureReactErrors() {\n    // This would be integrated with error boundaries\n    window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ = {\n      onError: (error, errorInfo) => {\n        this.reportError(error, {\n          type: 'react_error',\n          component_stack: errorInfo.componentStack\n        });\n      }\n    };\n  }\n};\n\n// A/B testing framework\nexport const abTesting = {\n  experiments: new Map(),\n  \n  // Define an experiment\n  defineExperiment(experimentId, variations, defaultVariation = 'control') {\n    this.experiments.set(experimentId, {\n      variations,\n      defaultVariation,\n      userVariation: this.getUserVariation(experimentId, variations, defaultVariation)\n    });\n  },\n  \n  // Get user's variation for an experiment\n  getVariation(experimentId) {\n    const experiment = this.experiments.get(experimentId);\n    return experiment ? experiment.userVariation : null;\n  },\n  \n  // Track experiment exposure\n  trackExposure(experimentId) {\n    const variation = this.getVariation(experimentId);\n    if (variation) {\n      userTracker.track('experiment_exposure', {\n        experiment_id: experimentId,\n        variation\n      });\n    }\n  },\n  \n  // Track experiment conversion\n  trackConversion(experimentId, conversionEvent, value = 1) {\n    const variation = this.getVariation(experimentId);\n    if (variation) {\n      userTracker.track('experiment_conversion', {\n        experiment_id: experimentId,\n        variation,\n        conversion_event: conversionEvent,\n        value\n      });\n    }\n  },\n  \n  getUserVariation(experimentId, variations, defaultVariation) {\n    // Consistent user bucketing based on user ID\n    const userId = userTracker.getUserId();\n    const hash = this.hashString(userId + experimentId);\n    const bucket = hash % 100;\n    \n    // Simple even distribution for now\n    const variationIndex = Math.floor(bucket / (100 / variations.length));\n    return variations[variationIndex] || defaultVariation;\n  },\n  \n  hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash);\n  }\n};\n\n// Initialize analytics\nexport const initAnalytics = () => {\n  // Initialize performance monitoring\n  performanceMonitor.trackWebVitals();\n  performanceMonitor.trackResourceTiming();\n  \n  // Initialize error tracking\n  errorTracker.init();\n  \n  // Track initial page view\n  if (typeof window !== 'undefined') {\n    userTracker.trackPageView(window.location.pathname, document.title);\n  }\n  \n  // Set up route change tracking for SPAs\n  if (typeof window !== 'undefined' && window.history) {\n    const originalPushState = window.history.pushState;\n    window.history.pushState = function(...args) {\n      originalPushState.apply(window.history, args);\n      userTracker.trackPageView(window.location.pathname, document.title);\n    };\n  }\n  \n  console.log('Analytics initialized');\n};\n\n// Export default analytics object\nexport default {\n  performance: performanceMonitor,\n  user: userTracker,\n  error: errorTracker,\n  ab: abTesting,\n  init: initAnalytics\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}