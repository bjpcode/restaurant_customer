{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://your-project.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'your-anon-key';\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\nexport const subscribeToMenuUpdates = callback => {\n  return supabase.channel('menu-updates').on('postgres_changes', {\n    event: '*',\n    schema: 'public',\n    table: 'menu_rest' // ← CHANGED FROM 'menu'\n  }, callback).subscribe();\n};\nexport const subscribeToOrderUpdates = (sessionId, callback) => {\n  return supabase.channel(`order-updates-${sessionId}`).on('postgres_changes', {\n    event: '*',\n    schema: 'public',\n    table: 'orders',\n    filter: `session_id=eq.${sessionId}`\n  }, callback).subscribe();\n};\nexport const fetchMenu = async () => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('menu_rest') // ← CHANGED FROM 'menu'\n    .select('*').eq('is_available', true).order('category', {\n      ascending: true\n    }).order('name', {\n      ascending: true\n    });\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error fetching menu:', error);\n    throw error;\n  }\n};\nexport const submitOrder = async orderData => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('orders').insert([orderData]).select().single();\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error submitting order:', error);\n    throw error;\n  }\n};\nexport const getOrdersBySession = async sessionId => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('orders').select('*').eq('session_id', sessionId).order('created_at', {\n      ascending: false\n    });\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    throw error;\n  }\n};\nexport const checkAvailability = async menuItemIds => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('menu_rest') // ← CHANGED FROM 'menu'\n    .select('id, is_available').in('id', menuItemIds);\n    if (error) throw error;\n    const unavailableItems = data.filter(item => !item.is_available);\n    return {\n      allAvailable: unavailableItems.length === 0,\n      unavailableItems: unavailableItems.map(item => item.id)\n    };\n  } catch (error) {\n    console.error('Error checking availability:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","subscribeToMenuUpdates","callback","channel","on","event","schema","table","subscribe","subscribeToOrderUpdates","sessionId","filter","fetchMenu","data","error","from","select","eq","order","ascending","console","submitOrder","orderData","insert","single","getOrdersBySession","checkAvailability","menuItemIds","in","unavailableItems","item","is_available","allAvailable","length","map","id"],"sources":["C:/Users/baij/Desktop/Work/Business/restuarant/customer/src/services/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://your-project.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'your-anon-key';\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nexport const subscribeToMenuUpdates = (callback) => {\n  return supabase\n    .channel('menu-updates')\n    .on('postgres_changes', \n      { \n        event: '*', \n        schema: 'public', \n        table: 'menu_rest'  // ← CHANGED FROM 'menu'\n      }, \n      callback\n    )\n    .subscribe();\n};\n\nexport const subscribeToOrderUpdates = (sessionId, callback) => {\n  return supabase\n    .channel(`order-updates-${sessionId}`)\n    .on('postgres_changes', \n      { \n        event: '*', \n        schema: 'public', \n        table: 'orders',\n        filter: `session_id=eq.${sessionId}`\n      }, \n      callback\n    )\n    .subscribe();\n};\n\nexport const fetchMenu = async () => {\n  try {\n    const { data, error } = await supabase\n      .from('menu_rest')  // ← CHANGED FROM 'menu'\n      .select('*')\n      .eq('is_available', true)\n      .order('category', { ascending: true })\n      .order('name', { ascending: true });\n\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error fetching menu:', error);\n    throw error;\n  }\n};\n\nexport const submitOrder = async (orderData) => {\n  try {\n    const { data, error } = await supabase\n      .from('orders')\n      .insert([orderData])\n      .select()\n      .single();\n\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error submitting order:', error);\n    throw error;\n  }\n};\n\nexport const getOrdersBySession = async (sessionId) => {\n  try {\n    const { data, error } = await supabase\n      .from('orders')\n      .select('*')\n      .eq('session_id', sessionId)\n      .order('created_at', { ascending: false });\n\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    throw error;\n  }\n};\n\nexport const checkAvailability = async (menuItemIds) => {\n  try {\n    const { data, error } = await supabase\n      .from('menu_rest')  // ← CHANGED FROM 'menu'\n      .select('id, is_available')\n      .in('id', menuItemIds);\n\n    if (error) throw error;\n    \n    const unavailableItems = data.filter(item => !item.is_available);\n    return {\n      allAvailable: unavailableItems.length === 0,\n      unavailableItems: unavailableItems.map(item => item.id)\n    };\n  } catch (error) {\n    console.error('Error checking availability:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}